# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1  

orbs:
  docker: circleci/docker@1.6.0   
    
jobs:
  build:
    docker:
      # Use the same Docker base as the project
      - image: cimg/python:3.7.11-node
          
    working_directory: ~/repo
    
    steps:
      - checkout
      - run:
          name: Create vitual environment
          command: |
            # Create virtual environment
            python3 -m venv ~/.$PROJECT_NAME
            source ~/.$PROJECT_NAME/bin/activate
      - run:
          name: Install dependencies
          command: |            
            # install npm, htmllint
            sudo npm install -g htmllint-cli
            sudo htmllint init
            
            # Install hadolint
            make install-hadolint
      - run:
          name: run lint
          command: |
            source ~/.$PROJECT_NAME/bin/activate
            # make lint for Docker file and index.html
            make lint
  pushdocker-image:
    docker:
      - image: circleci/golang:1.15
    working_directory: ~/repo      
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build & uploading the Docker image
          command: |
            # Building Docker Image
            echo $DOCKERHUB_USERID
            echo $IMAGE_NAME
            echo $IMAGE_VERSION
            docker build -t $DOCKERHUB_USERID/$IMAGE_NAME:$IMAGE_VERSION .
            docker image ls
            
            # Upload Docker Image
            docker login -u $DOCKERHUB_USERID -p $DOCKERHUB_PASSWORD
            docker push $DOCKERHUB_USERID/$IMAGE_NAME:$IMAGE_VERSION   
  deploy-kubernetes:
    docker:
      - image: cimg/base:2021.07
      
    working_directory: ~/repo

    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["f2:b5:a8:a4:e0:ab:7b:46:31:2f:1c:a5:bf:32:a2:26"]
      - run:
          name: install dependencies and deploy
          command: |
            
            # Install kubectl
            curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.25.9/2023-05-11/bin/linux/amd64/kubectl

            sudo chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin
            sudo echo 'export PATH=$PATH:$HOME/bin' >> ~/.bash_profile
            kubectl version --short --client
            
            # Install eksctl

            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version                  
            # Install awscli 
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
            
            aws configure list
            # Create Kubernetes Cluster
            CLUSTER_NAME="${PROJECT_NAME}.${AWS_DEFAULT_REGION}.eksctl.io"


            if kubectl config get-clusters | grep -q ${CLUSTER_NAME}; then
                echo "Cluster '${CLUSTER_NAME}' already exists! Skipping this task"
            else
                echo "Creating cluster..."
                eksctl create cluster --config-file=config_cluster.yaml
            fi
   
            kubectl apply -f deployment.yml
            kubectl apply -f services.yml
  Rollover-deployment:   
    docker:
     - image: cimg/base:2021.07

    working_directory: ~/repo

    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["f2:b5:a8:a4:e0:ab:7b:46:31:2f:1c:a5:bf:32:a2:26"]
      - run:
          name: install dependencies and deploy
          command: |

            # Install kubectl
            curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.25.9/2023-05-11/bin/linux/amd64/kubectl

            sudo chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin
            sudo echo 'export PATH=$PATH:$HOME/bin' >> ~/.bash_profile
            kubectl version --short --client

            # Install eksctl

            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version                  
            # Install awscli 
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
            aws configure list

            aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $PROJECT_NAME
            kubectl set image deployment/$PROJECT_NAME $PROJECT_NAME=$DOCKERHUB_USERID/$IMAGE_NAME:$IMAGE_VERSION
            
                         
workflows:
  default:
     jobs:
       - build
       - pushdocker-image:
            requires: [build]
       - deploy-kubernetes:
            requires: [pushdocker-image]
       - Rollover-deployment:
            requires: [pushdocker-image]
